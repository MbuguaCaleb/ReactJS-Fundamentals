{"version":3,"sources":["components/layouts/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","TodoItem","getStyle","borderBottom","props","todo","completed","this","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","key","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","placeholder","flex","className","About","Fragment","App","axios","post","then","res","data","delete","filter","get","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"0QAmBA,IAAMA,EAAa,CAEfC,WAAW,OACXC,MAAM,OACNC,UAAU,SACVC,QAAQ,QAKNC,EAAW,CAEbH,MAAM,OACNI,eAAe,QAIJC,EA9Bf,WAEI,OACI,4BAAQC,MAAOR,GACX,wCACA,kBAAC,IAAD,CAAMQ,MAAOH,EAAUI,GAAG,KAA1B,QAFJ,KAGI,kBAAC,IAAD,CAAMD,MAAOH,EAAWI,GAAG,UAA3B,WCTCC,EAAb,2MACEC,SAAW,WACT,MAAO,CACLV,WAAY,UACZG,QAAS,OACTQ,aAAc,kBACdN,eAAgB,EAAKO,MAAMC,KAAKC,UAAY,eAAiB,SANnE,wEAUY,IAAD,EACeC,KAAKH,MAAMC,KAAzBG,EADD,EACCA,GAAIC,EADL,EACKA,MACZ,OACE,yBAAKV,MAAOQ,KAAKL,YAEf,2BACE,2BACEQ,KAAK,WACLC,SAAUJ,KAAKH,MAAMQ,aAAaC,KAAKN,KAAMC,KAE9C,GAEAC,EAED,4BAAQK,QAASP,KAAKH,MAAMW,QAAQF,KAAKN,KAAMC,GAAKT,MAAOiB,GAA3D,WAxBV,GAA8BC,aAyCxBD,EAAW,CACfxB,WAAY,UACZC,MAAO,OACPyB,OAAQ,OACRvB,QAAS,UACTwB,aAAc,MACdC,OAAQ,UACRC,MAAO,SAGMpB,IC3BAqB,E,iLAtBH,IAAD,OACP,OAAOf,KAAKH,MAAMmB,MAAMC,IAAI,SAAAnB,GAAI,OAE9B,kBAAC,EAAD,CACEoB,IAAKpB,EAAKG,GACVH,KAAMA,EACNO,aAAc,EAAKR,MAAMQ,aACzBG,QAAS,EAAKX,MAAMW,gB,GARRE,a,QCoDLS,EArDf,2MAEEC,MAAQ,CACNlB,MAAO,IAHX,EAWEE,SAAW,SAAAiB,GAAC,OACV,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAbhC,EAgBEC,SAAW,SAAAL,GACTA,EAAEM,iBACF,EAAK9B,MAAM+B,QAAQ,EAAKR,MAAMlB,OAE9B,EAAKoB,SAAS,CACZpB,MAAO,MArBb,wEAyBI,OACE,0BAAMwB,SAAU1B,KAAK0B,SAAUlC,MAAO,CAAEqC,QAAS,SAC/C,2BACE1B,KAAK,OACLqB,KAAK,QACLM,YAAY,cACZtC,MAAO,CAAEuC,KAAM,KAAM3C,QAAS,OAC9BqC,MAAOzB,KAAKoB,MAAMlB,MAClBE,SAAUJ,KAAKI,WAGjB,2BACED,KAAK,SACLsB,MAAM,SACNO,UAAU,MACVxC,MAAO,CAAEuC,KAAM,YAxCzB,GAA6BrB,aCaduB,MAdd,WACG,OACI,kBAAC,IAAMC,SAAP,KAEI,qCACA,gG,yBCuFGC,E,2MAnFbf,MAAQ,CACNJ,MAAO,I,EAWTX,aAAe,SAAAJ,GAEb,EAAKqB,SAAS,CACZN,MAAO,EAAKI,MAAMJ,MAAMC,IAAI,SAAAnB,GAI1B,OAHIA,EAAKG,KAAOA,IACdH,EAAKC,WAAaD,EAAKC,WAElBD,O,EAOb8B,QAAU,SAAA1B,GACRkC,IACGC,KAAK,6CAA8C,CAClDnC,QACAH,WAAW,IAEZuC,KAAK,SAAAC,GAAG,OACP,EAAKjB,SAAS,CACZN,MAAM,GAAD,mBAAM,EAAKI,MAAMJ,OAAjB,CAAwBuB,EAAIC,Y,EAOzChC,QAAU,SAAAP,GACRmC,IAAMK,OAAN,qDAA2DxC,IAAMqC,KAAK,SAAAC,GAAG,OACvE,EAAKjB,SAAS,CACZN,MAAM,YAAK,EAAKI,MAAMJ,MAAM0B,OAAO,SAAA5C,GAAI,OAAIA,EAAKG,KAAOA,U,mFAxCxC,IAAD,OAElBmC,IACGO,IAAI,wDACJL,KAAK,SAAAC,GAAG,OAAI,EAAKjB,SAAS,CAAEN,MAAOuB,EAAIC,W,+BAwClC,IAAD,OACP,OACE,kBAAC,IAAD,KACE,yBAAKR,UAAU,OACb,yBAAKA,UAAU,aAGb,kBAAC,EAAD,MACA,kBAAC,IAAD,CACEY,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAAjD,GAAK,OACX,kBAAC,IAAMqC,SAAP,KAEE,kBAAC,EAAD,CAASN,QAAS,EAAKA,UAGvB,kBAAC,EAAD,CACEZ,MAAO,EAAKI,MAAMJ,MAClBX,aAAc,EAAKA,aACnBG,QAAS,EAAKA,cAOtB,kBAAC,IAAD,CAAOqC,KAAK,SAASE,UAAWd,W,GA5E1BvB,aCNlBsC,IAASF,OAAO,kBAAC,EAAD,MAASG,SAASC,eAAe,W","file":"static/js/main.dedc3ba1.chunk.js","sourcesContent":["//functional based  react component\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction Header(){\n\n    return (\n        <header style={headerStyle}>\n            <h1>TodoList</h1>\n            <Link style={linkStyle}to=\"/\">Home</Link> | \n            <Link style={linkStyle} to=\"/about\">About</Link>\n        \n        </header>\n    )\n\n}\n\nconst headerStyle ={\n\n    background:'#333',\n    color:'#fff',\n    textAlign:'center',\n    padding:'10px'\n\n}\n\n\nconst linkStyle ={\n\n    color:'#fff',\n    textDecoration:'none'\n}\n\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background: '#f4f4f4',\n      padding: '10px',\n      borderBottom: '1px #ccc dotted',\n      textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n    };\n  };\n\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        {/* Already has data from the propery thus you may extract */}\n        <p>\n          <input\n            type='checkbox'\n            onChange={this.props.markComplete.bind(this, id)}\n          />\n          {''}\n         \n          {title}\n\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>\n            x\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\n//PropTYPES\nTodoItem.propTypes = {\n  //remeber here that an object has been passed but not an array\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\n\nconst btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  padding: '5px 9px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right'\n};\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n  render() {\n    return this.props.todos.map(todo => (\n      /* passing a todo property which is a single element looped through */\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        markComplete={this.props.markComplete}\n        delTodo={this.props.delTodo}\n      />\n    ));\n  }\n}\n\n//Prop Types\n//Good Practice\n\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\n\nexport default Todos;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class AddTodo extends Component {\n  //for fields should be fields in your state\n  state = {\n    title: ''\n  };\n\n  //remeber arrow functions role when using custom reactMethods\n  //remeber that this state is in this particular component\n  //We do not have to go to the APP.JS....\n  //THE Above is a component level state.\n\n  onChange = e =>\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    //setting the state object back to nothing when submitted.\n    this.setState({\n      title: ''\n    });\n  };\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\n        <input\n          type='text'\n          name='title'\n          placeholder='Add Todo...'\n          style={{ flex: '10', padding: '5px' }}\n          value={this.state.title}\n          onChange={this.onChange}\n        />\n\n        <input\n          type='submit'\n          value='Submit'\n          className='btn'\n          style={{ flex: '1' }}\n        />\n      </form>\n    );\n  }\n}\n\n//PropTYPES\nAddTodo.propTypes = {\n  //remeber here that an object has been passed but not an array\n  addTodo: PropTypes.func.isRequired\n};\n\nexport default AddTodo;\n","import React from 'react'\n\n function About() {\n    return (\n        <React.Fragment>\n\n            <h1>About</h1>\n            <p>This is todo list app v.1.1.It is part\n                of react crash course ..\n            </p>\n           \n        </React.Fragment>\n    )\n}\n\n\nexport default About;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layouts/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport './App.css';\n//import uuid from 'uuid';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    //axios returns a promise which is the data..\n    axios\n      .get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({ todos: res.data }));\n  }\n\n  //Toggle Complete\n  markComplete = id => {\n    //console.log(id)\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  //Add Todo\n  //Making A a post request\n  addTodo = title => {\n    axios\n      .post('https://jsonplaceholder.typicode.com/todos', {\n        title,\n        completed: false\n      })\n      .then(res =>\n        this.setState({\n          todos: [...this.state.todos, res.data]\n        })\n      );\n  };\n\n  //Delete Todo\n\n  delTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })\n    );\n  };\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <div className='container'>\n            {/* adds properties to the todo component from the states */}\n            {/*Note that the header is component one*/}\n            <Header />\n            <Route\n              exact\n              path='/'\n              render={props => (\n                <React.Fragment>\n                  {/*Note that the header is component two*/}\n                  <AddTodo addTodo={this.addTodo} />\n\n                  {/*Note that the header is component three*/}\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n\n            {/*Note that the header is component four*/}\n            <Route path='/about' component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}