{"ast":null,"code":"var _jsxFileName = \"/home/mbugua/Desktop/MY-PROJECTS/REACT JS/todolist/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layouts/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport './App.css'; //import uuid from 'uuid';\n\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = id => {\n      //console.log(id)\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.addTodo = title => {\n      axios.post('https://jsonplaceholder.typicode.com/todos', {\n        title,\n        completed: false\n      }).then(res => this.setState({\n        todos: [...this.state.todos, res.data]\n      }));\n    };\n\n    this.delTodo = id => {\n      axios.delete(\"https://jsonplaceholder.typicode.com/todos/\".concat(id)).then(res => this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    //axios returns a promise which is the data..\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({\n      todos: res.data\n    }));\n  } //Toggle Complete\n\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mbugua/Desktop/MY-PROJECTS/REACT JS/todolist/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Todos","AddTodo","About","axios","App","state","todos","markComplete","id","setState","map","todo","completed","addTodo","title","post","then","res","data","delTodo","delete","filter","componentDidMount","get","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE;AADD,KADkB;;AAAA,SAa1BC,YAb0B,GAaXC,EAAE,IAAI;AACnB;AACA,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,IAAI;AAClC,cAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAClBG,YAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACD;;AACD,iBAAOD,IAAP;AACD,SALM;AADK,OAAd;AAQD,KAvByB;;AAAA,SA2B1BE,OA3B0B,GA2BhBC,KAAK,IAAI;AACjBX,MAAAA,KAAK,CACFY,IADH,CACQ,4CADR,EACsD;AAClDD,QAAAA,KADkD;AAElDF,QAAAA,SAAS,EAAE;AAFuC,OADtD,EAKGI,IALH,CAKQC,GAAG,IACP,KAAKR,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBW,GAAG,CAACC,IAA1B;AADK,OAAd,CANJ;AAUD,KAtCyB;;AAAA,SA0C1BC,OA1C0B,GA0ChBX,EAAE,IAAI;AACdL,MAAAA,KAAK,CAACiB,MAAN,sDAA2DZ,EAA3D,GAAiEQ,IAAjE,CAAsEC,GAAG,IACvE,KAAKR,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBe,MAAjB,CAAwBV,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAA5C,CAAJ;AADK,OAAd,CADF;AAKD,KAhDyB;AAAA;;AAK1Bc,EAAAA,iBAAiB,GAAG;AAClB;AACAnB,IAAAA,KAAK,CACFoB,GADH,CACO,sDADP,EAEGP,IAFH,CAEQC,GAAG,IAAI,KAAKR,QAAL,CAAc;AAAEH,MAAAA,KAAK,EAAEW,GAAG,CAACC;AAAb,KAAd,CAFf;AAGD,GAVyB,CAY1B;;;AAqCAM,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,GAFP;AAGE,MAAA,MAAM,EAAEC,KAAK,IACX,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKZ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAKE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,KADpB;AAEE,QAAA,YAAY,EAAE,KAAKC,YAFrB;AAGE,QAAA,OAAO,EAAE,KAAKY,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAuBE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEjB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF,CADF,CADF;AA+BD;;AAjFyB;;AAoF5B,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layouts/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport './App.css';\n//import uuid from 'uuid';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    //axios returns a promise which is the data..\n    axios\n      .get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({ todos: res.data }));\n  }\n\n  //Toggle Complete\n  markComplete = id => {\n    //console.log(id)\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  //Add Todo\n  //Making A a post request\n  addTodo = title => {\n    axios\n      .post('https://jsonplaceholder.typicode.com/todos', {\n        title,\n        completed: false\n      })\n      .then(res =>\n        this.setState({\n          todos: [...this.state.todos, res.data]\n        })\n      );\n  };\n\n  //Delete Todo\n\n  delTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })\n    );\n  };\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <div className='container'>\n            {/* adds properties to the todo component from the states */}\n            {/*Note that the header is component one*/}\n            <Header />\n            <Route\n              exact\n              path='/'\n              render={props => (\n                <React.Fragment>\n                  {/*Note that the header is component two*/}\n                  <AddTodo addTodo={this.addTodo} />\n\n                  {/*Note that the header is component three*/}\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n\n            {/*Note that the header is component four*/}\n            <Route path='/about' component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}