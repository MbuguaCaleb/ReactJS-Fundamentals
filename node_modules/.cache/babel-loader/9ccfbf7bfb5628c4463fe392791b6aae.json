{"ast":null,"code":"var _jsxFileName = \"/home/mbugua/Desktop/MY-PROJECTS/todolist/src/components/AddTodo.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class AddTodo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      'title': '' //remeber arrow functions role when using custom reactMethods\n      //remeber that this state is in this particular component\n      //We do not have to go to the APP.JS....\n      //THE Above is a component level state.\n\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.addTodo(this.state.title); //setting the state object back to nothing when submitted.\n\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Add Todo...\",\n      style: {\n        'flex': '10',\n        padding: '5px'\n      },\n      value: this.state.title,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn\",\n      style: {\n        flex: '1'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n} //PropTYPES\n\nAddTodo.propTypes = {\n  //remeber here that an object has been passed but not an array\n  addTodo: PropTypes.func.isRequired\n};\nexport default AddTodo;","map":{"version":3,"sources":["/home/mbugua/Desktop/MY-PROJECTS/todolist/src/components/AddTodo.js"],"names":["React","Component","PropTypes","AddTodo","state","onChange","e","setState","target","name","value","onSubmit","preventDefault","props","addTodo","title","render","display","padding","flex","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAGnCG,KAHmC,GAG5B;AAEH,eAAQ,EAFL,CAMX;AACA;AACA;AACA;;AATW,KAH4B;;AAAA,SAevCC,QAfuC,GAe3BC,CAAD,IAAO,KAAKC,QAAL,CAAc;AAC5B,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADE,KAAd,CAfqB;;AAAA,SAoBvCC,QApBuC,GAoB3BL,CAAD,IAAM;AAEbA,MAAAA,CAAC,CAACM,cAAF;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKV,KAAL,CAAWW,KAA9B,EAHa,CAIb;;AACA,WAAKR,QAAL,CAAc;AACVQ,QAAAA,KAAK,EAAE;AADG,OAAd;AAGH,KA5BsC;AAAA;;AA6BnCC,EAAAA,MAAM,GAAG;AACL,WACG;AAAM,MAAA,QAAQ,EAAE,KAAKL,QAArB;AAA+B,MAAA,KAAK,EAAG;AAACM,QAAAA,OAAO,EAAC;AAAT,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,IAAI,EAAC,OAFL;AAGA,MAAA,WAAW,EAAC,aAHZ;AAIA,MAAA,KAAK,EAAG;AAAC,gBAAO,IAAR;AAAcC,QAAAA,OAAO,EAAC;AAAtB,OAJR;AAKA,MAAA,KAAK,EAAG,KAAKd,KAAL,CAAWW,KALnB;AAMA,MAAA,QAAQ,EAAG,KAAKV,QANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAWX;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,KAAK,EAAC,QAFN;AAGA,MAAA,SAAS,EAAE,KAHX;AAIA,MAAA,KAAK,EAAE;AAACc,QAAAA,IAAI,EAAC;AAAN,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXW,CADH;AAoBH;;AAlDkC,C,CAqDvC;;AACAhB,OAAO,CAACiB,SAAR,GAAmB;AAGf;AACAN,EAAAA,OAAO,EAACZ,SAAS,CAACmB,IAAV,CAAeC;AAJR,CAAnB;AAUA,eAAenB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class AddTodo extends Component {\n\n//for fields should be fields in your state\n    state ={\n\n        'title':''\n    }\n\n\n//remeber arrow functions role when using custom reactMethods\n//remeber that this state is in this particular component\n//We do not have to go to the APP.JS....\n//THE Above is a component level state.\n\n\nonChange = (e) => this.setState({\n    [e.target.name]: e.target.value\n});\n\n\nonSubmit = (e) =>{\n    \n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    //setting the state object back to nothing when submitted.\n    this.setState({\n        title: ''\n    });\n}\n    render() {\n        return (\n           <form onSubmit={this.onSubmit} style ={{display:'flex'}}>\n               <input \n               type=\"text\" \n               name=\"title\" \n               placeholder=\"Add Todo...\"\n               style ={{'flex':'10', padding:'5px'}}\n               value ={this.state.title}\n               onChange ={this.onChange}\n               />\n\n             \n<input \ntype=\"submit\" \nvalue=\"Submit\"\nclassName =\"btn\"\nstyle={{flex:'1'}}\n/>\n           </form>\n        )\n    }\n}\n\n//PropTYPES\nAddTodo.propTypes ={\n\n\n    //remeber here that an object has been passed but not an array\n    addTodo:PropTypes.func.isRequired,\n \n  \n  }\n\n\nexport default AddTodo\n"]},"metadata":{},"sourceType":"module"}