{"ast":null,"code":"var _jsxFileName = \"/home/mbugua/Desktop/MY-PROJECTS/REACT JS/todolist/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layouts/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport './App.css'; //import uuid from 'uuid';\n\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = id => {\n      //console.log(id)\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.addTodo = title => {\n      axios.post('https://jsonplaceholder.typicode.com/todos', {\n        title,\n        completed: false\n      }).then(res => this.setState({\n        todos: [...this.state.todos, res.data]\n      }));\n    };\n\n    this.delTodo = id => {\n      axios.delete(\"https://jsonplaceholder.typicode.com/todos/\".concat(id)).then(res => this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    //axios returns a promise which is the data..\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({\n      todos: res.data\n    }));\n  } //Toggle Complete\n\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mbugua/Desktop/MY-PROJECTS/REACT JS/todolist/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Todos","AddTodo","About","axios","App","state","todos","markComplete","id","setState","map","todo","completed","addTodo","title","post","then","res","data","delTodo","delete","filter","componentDidMount","get","render","props"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Header from './components/layouts/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport './App.css';\n//import uuid from 'uuid';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  state ={\n\n    todos:[]\n    \n\n  }\n\n  componentDidMount(){\n\n\n    //axios returns a promise which is the data..\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res=> this.setState({todos:res.data}))\n  }\n\n  //Toggle Complete\n  markComplete =(id) =>{\n\n    //console.log(id)\n    this.setState({\n      todos:this.state.todos.map(todo =>{\n\n        if(todo.id === id){\n\n          todo.completed = !todo.completed\n        }\n        return todo;\n      })\n    });\n  }\n\n  //Add Todo\n  //Making A a post request\n  addTodo =(title) =>{\n\n   axios.post('https://jsonplaceholder.typicode.com/todos',{\n\n   title,\n   completed:false\n\n   }).then(res =>  this.setState({\n    todos:[...this.state.todos,res.data]\n  })\n);\n  \n  }\n\n\n\n  //Delete Todo\n\n  delTodo =(id)=>{\n\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res =>   this.setState({\n      todos:[\n\n        ...this.state.todos.filter(todo =>todo.id\n          !== id)\n      ]\n    }));\n  }\n  render(){\n\n    return (\n<Router>\n\n <div className=\"App\"> \n\n<div className=\"container\">\n   {/* adds properties to the todo component from the states */}\n  {/*Note that the header is component one*/ }\n   <Header />\n   <Route exact path=\"/\" render={props =>(\n\n     <React.Fragment>\n\n{/*Note that the header is component two*/ }\n<AddTodo addTodo ={this.addTodo}/>\n\n{/*Note that the header is component three*/ }\n<Todos todos ={ this.state.todos} markComplete ={this.markComplete}\n\ndelTodo ={this.delTodo}\n\n/>\n     </React.Fragment>\n   )}/>\n\n\n{/*Note that the header is component four*/ }\n   <Route path=\"/about\"  component ={About}/>\n   \n\n</div>\n </div>\n </Router>\n    );\n\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}